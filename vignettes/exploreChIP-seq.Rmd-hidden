---
title: "igvR: programmatic access to igv.js, a demo exploring CTCF ChIP-seq near the GATA2 gene"
author: "Paul Shannon"
package: igvR
date: "`r Sys.Date()`"
output:
   BiocStyle::html_document
vignette: >
  %\VignetteIndexEntry{"igvR: programmatic access to igv.js, a browser-based genome track viewer"}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

<style>
.main-container { width: 1200px; max-width:2800px;}
</style>


```{r setup, include = FALSE}
options(width=120)
knitr::opts_chunk$set(
   collapse = TRUE,
   eval=interactive(),
   echo=TRUE,
   comment = "#>"
)
```


# Overview
CTCF is a chromatin binding factor for which ample ChIP-seq assays are avaialable.   Here we use
a bam file from GEO GSM749704 from the ENCODE project, hg19, to demonstrate

  - How to slice and load a ChIP-seq alignment file, displaying a pileup in igv
  - Load and display some pre-calculated MACS2 narrow peaks called on this bam file
  - Calculate and display sequence matches to the CTCF (MA0139.1) binding motif
  - popup and display the graphical motif for comparison to the actual sequence

igv <- igvR()
setBrowserWindowTitle(igv, "CTCF ChIP-seq")
setGenome(igv, "hg19")
```
Display 1.4MB on chr3 more or less centered on the GATA2 genes
```{r initialDisplay,  results='hide'}
showGenomicRegion(igv, "chr3:128,079,020-128,331,275")
```

## Create a GRanges object specifying our region of interest, obtaining a list (chrom, start, end, string) from igv

```{r roi,  results='hide'}
loc <- getGenomicRegion(igv)
which <- with(loc, GRanges(seqnames=chrom, ranges = IRanges(start, end)))
param <- ScanBamParam(which=which, what = scanBamWhat())
bamFile <- "~/github/ChIPseqMotifMatch/bulk/GSM749704/GSM749704_hg19_wgEncodeUwTfbsGm12878CtcfStdAlnRep1.bam"
file.exists(bamFile)
x <- readGAlignments(bamFile, use.names=TRUE, param=param)
track <- GenomicAlignmentTrack("ctcf bam", x, visibilityWindow=10000000, trackHeight=200)  # 30000 default
displayTrack(igv, track)
```

## Load narrow peaks called by MACS2 from the bam file

We ran MACS2 using docker and make, with this makefile:

DATADIR=/Users/paul/github/igvR/vignettes/macs2
BAM=GSM749704_hg19_wgEncodeUwTfbsGm12878CtcfStdAlnRep1.bam
NAME=GSM749704_hg19_chr19
run:
	docker run -v $(DATADIR):/data/ fooliu/macs2 callpeak -t /data/$(BAM) -n $(NAME) --outdir data/

This produces several files; we are interested only in the narrow peaks file, which is included in
this package for the sake of simplicity.


```{r narrow.peaks.track,  results='hide'}
tbl.pk <- read.table("macs2/GSM749704_hg19_chr19_peaks.narrowPeak", sep="\t",
                     header=FALSE, as.is=TRUE)[, c(1,2,3,5)]
dim(tbl.pk)
colnames(tbl.pk) <- c("chrom", "start", "end", "score")
loc <- getGenomicRegion(igv)
while(!is.list(loc)){
   print(loc)
   loc <- getGenomicRegion(igv)
   }
printf("--- good loc obtained? ")
print(loc)

tbl.pk <- subset(tbl.pk, chrom==loc$chrom & start >= loc$start & end <= loc$end)
dim(tbl.pk)
track <- DataFrameQuantitativeTrack("macs2 peaks", tbl.pk, color="red", autoscale=TRUE)
displayTrack(igv, track)

```
